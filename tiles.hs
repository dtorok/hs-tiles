import Control.Lens hiding (transform)
import Debug.Trace

-------------
-- data types
-------------

data Color = White | Yellow | Red deriving (Show, Eq)
data Wall = Wall {
			width  :: Int,
			height :: Int,
			tiles  :: [[Maybe Color]]
} deriving (Show)

type Shape = [(Int, Int)]


-------
-- wall
-------
on :: (Int, Int) -> Wall -> Bool
on (x, y) wall = x >= 0 && x < (width wall) &&
                 y >= 0 && y < (height wall)

createWall :: Int -> Int -> Maybe Color -> Wall
createWall w h c = Wall w h createRows
	where
		createRows = ((take h) . repeat) createRow
		createRow = ((take w) . repeat) c

setColor :: Int -> Int -> Color -> Wall -> Wall
setColor x y c wall | (x, y) `on` wall = wall{tiles=tiles'}
	where
		tiles' = (tiles wall) & element y .~ row'
		row' = ((tiles wall) !! y) & element x .~ Just c
setColor x y c wall = wall

getColor :: (Int, Int) -> Wall -> Maybe Color
getColor (x, y) wall | (x, y) `on` wall = (tiles wall) !! y !! x
getColor (x, y) wall = Nothing

isEmptyTitle :: Wall -> (Int, Int) -> Bool
isEmptyTitle wall coord = getColor coord wall == Nothing

wall2html :: Wall -> String
wall2html wall = mkhtml $ (mktable . unwords) htmlrows
	where
		htmlrows = map (mktr . unwords . htmlrow) $ tiles wall
		htmlrow row = map mktd row
		mkhtml content = "<html>\
		 				    \<head><style>\
		 				        \body { background-color: #dddddd; } \
		 				        \table { margin: auth } \
		 				    	\table tr td { width: 30px; height: 30px } \
						    	\.White { background-color: white } \
						    	\.Yellow { background-color: yellow } \
						    	\.Red { background-color: #99182C } \
						    	\.empty { background-color: grey } \
						  	\</style></head>\
						  	\<body>" ++ content ++ "</body>\
						  \</html>"

		mktable table = "<table>" ++ table ++ "</table>"
		mktr row = "<tr>" ++ row ++ "</tr>"
		mktd tile = "<td class=\"" ++ (getClass tile) ++ "\">&nbsp</td>"
		--mktd tile = "<td style=\"background-color: " ++ (getClass tile) ++ "\">&nbsp</td>"

		getClass :: Maybe Color -> String
		getClass (Just title) = show title
		getClass Nothing = "empty"

add :: Shape -> Int -> Int -> Int -> Color -> Wall -> Wall
add shape x y r c wall = wall'
	where
		shape' = transform x y r shape
		wall' = foldl setTile wall shape'
		setTile w (sx, sy) = setColor sx sy c w

addSafe :: Shape -> Int -> Int -> Int -> Color -> Wall -> Wall
addSafe shape x y r c wall = case addMaybe shape x y r c (Just wall) of
								Just wall' -> wall'
								Nothing    -> wall

addMaybe :: Shape -> Int -> Int -> Int -> Color -> Maybe Wall -> Maybe Wall
addMaybe shape x y r c (Just wall) = case isClear of
								True  -> Just (add shape x y r c wall)
								False -> Nothing
	where
		shape' = transform x y r shape
		isClear = (filter (hasTitleAlready wall) shape') == []
		hasTitleAlready wall coord = not $ isEmptyTitle wall coord


---------
-- shapes
---------

rotate :: Int -> Shape -> Shape
rotate r shape = map rotateCoord shape
	where 
		norm :: Int -> Int
		norm r | r > 3 = r `mod` 4
		norm r | r < 0 = 4 + (r `mod` 4)
		norm r = r

		nr = norm r
		rotateCoord coord = foldl rotateOnce coord [1..nr]
		rotateOnce (sx, sy) _ = (-sy, sx)

translate :: Int -> Int -> Shape -> Shape
translate x y shape = map translateCoord shape
	where
		translateCoord (sx, sy) = (x + sx, y + sy)

transform :: Int -> Int -> Int -> (Shape -> Shape)
transform x y r = (translate x y) . (rotate r)

sL :: Shape
sL = [(0, 0), (0, 1), (0, 2), (1, 2)]

sJ :: Shape
sJ = [(0, 0), (0, 1), (0, 2), (-1, 2)]

sI :: Shape
sI = [(0, 0), (1, 0), (2, 0), (3, 0)]

sS :: Shape
sS = [(0, 0), (1, 0), (1, -1), (2, -1)]

sZ :: Shape
sZ = [(0, 0), (1, 0), (1, 1), (2, 1)]

sO :: Shape
sO = [(0, 0), (1, 0), (1, 1), (0, 1)]

sT :: Shape
sT = [(0, 0), (1, 0), (2, 0), (1, 1)]


-----------
-- indexing
-----------
byIndex :: Int -> [a] -> a
byIndex index items = items !! nindex
	where
		nindex = index `mod` (length items)


shapeByIndex :: Int -> Shape
shapeByIndex index = byIndex index [sL, sJ, sI, sS, sZ, sO, sT]

colorByIndex :: Int -> Color
colorByIndex index = byIndex index [White, Yellow, Red]


-------
-- main
-------

decorateWall :: Wall -> Wall
decorateWall wall = addSafe sJ  8 3 3 Red $ 
					addSafe sI  6 4 0 Yellow $ 
					addSafe sZ  6 1 1 Red $
					addSafe sS  6 3 0 White $ 
					addSafe sJ  7 1 3 Yellow $
					addSafe sL  4 2 0 White $
					addSafe sO 10 1 0 White $
					addSafe sT 11 5 3 Yellow $ 
					addSafe sS 13 4 3 Red $
			 		wall
			

deserializeWall :: [(Int, Int, Int, Int, Int)] -> Wall -> Wall
deserializeWall shapeData wall = generate shapeData wall
	where
		generate [] wall = wall
		generate ((s,x,y,r,c):sx) wall = generate sx $ addSafe (shapeByIndex s) x y r (colorByIndex c) wall

fillupWall :: Wall -> Wall
fillupWall wall = fillup (0, 0) 0 0 6 wall
	where
		fillup (x, y) _ _        _   wall | x == maxx = wall
		fillup _      _ _        0   wall = wall
		fillup coord  c genstate cnt wall | genstate == maxGenState = fillup (next coord) (c + 1) 0 cnt wall
		fillup (x, y) c genstate cnt wall = case tryToAdd gShape x y gR (colorByIndex c) (Just wall) of
											Just wall' -> fillup (next (x, y)) (c + 1) 0              (cnt-1) wall'
											Nothing    -> fillup (x, y)        (c + 1) (genstate + 1)  cnt    wall
							where
								(gShape, gR) = genShape genstate

		next :: (Int, Int) -> (Int, Int)
		next (x, y) | y == maxy = (x+1, 0)
		next (x, y) = (x, y+1)

		maxx = (width wall) -  1
		maxy = (height wall) -  1

		tryToAdd :: Shape -> Int -> Int -> Int -> Color -> Maybe Wall -> Maybe Wall
		tryToAdd shape x y r c (Just wall) = case checkColors of 
												True -> addMaybe shape x y r c (Just wall)
												False -> Nothing
			where
				shape' = transform x y r shape
				checkColors = and $ map checkColorFor shape'
				checkColorAround coord = and $ map checkColorFor (coordsAround coord)
				checkColorFor coord = case getColor coord wall of
												Just c' -> c' /= c
												Nothing -> True
				coordsAround (sx, sy) = [(sx+1, sy), (sx-1, sy), (sx, sy+1), (sx, sy-1)]

type Gen = Int -> (Shape, Int)
genShape :: Gen
genShape state = (shapeByIndex $ state `div` 4, state `mod` 4)
maxGenState :: Int
maxGenState = 7 * 4

main :: IO ()
main = do
	let wall = 
			   --deserializeWall randomShapes $ 
			   decorateWall $
			   setColor 0 0 Yellow $ 
			   setColor 1 1 Red $ 
			   setColor 0 2 White $ 
			   createWall 30 7 Nothing
	let wall' = fillupWall $ 
			   createWall 30 7 Nothing

	writeFile "/tmp/tiles.html" $ wall2html wall'
	--print $ wall
	--print $ wall2html wall





randomShapes = [(0, 4, 6, 1, 2), (1, 0, 2, 0, 0), (6, 22, 6, 0, 1), (3, 27, 5, 1, 1), (0, 26, 0, 1, 1), (0, 21, 0, 1, 2), (1, 25, 6, 0, 1), (2, 15, 0, 3, 1), (3, 29, 0, 1, 1), (6, 1, 5, 0, 2), (1, 14, 1, 0, 1), (5, 15, 0, 2, 1), (3, 20, 1, 2, 0), (1, 29, 6, 0, 2), (5, 0, 5, 3, 1), (1, 24, 3, 2, 2), (3, 7, 6, 0, 2), (3, 9, 6, 3, 0), (6, 19, 6, 4, 1), (1, 0, 1, 1, 1), (6, 4, 6, 4, 0), (6, 16, 2, 4, 0), (2, 20, 1, 0, 0), (2, 14, 4, 4, 1), (3, 26, 2, 0, 1), (2, 10, 5, 3, 2), (4, 5, 1, 4, 1), (1, 10, 5, 4, 0), (5, 6, 1, 3, 0), (5, 18, 6, 1, 0), (3, 21, 1, 2, 2), (3, 22, 5, 0, 0), (5, 19, 4, 2, 1), (5, 27, 5, 3, 0), (3, 5, 4, 1, 1), (0, 1, 3, 2, 0), (4, 12, 2, 4, 0), (5, 19, 1, 0, 2), (4, 0, 6, 1, 1), (2, 16, 4, 3, 0), (5, 26, 6, 1, 0), (4, 18, 4, 2, 2), (2, 14, 0, 3, 2), (1, 8, 3, 3, 1), (6, 0, 2, 2, 0), (4, 23, 2, 1, 2), (5, 1, 6, 1, 0), (3, 26, 2, 4, 0), (0, 13, 1, 3, 0), (0, 3, 0, 1, 1), (0, 20, 3, 3, 1), (4, 27, 1, 3, 0), (0, 8, 2, 2, 1), (2, 15, 3, 4, 0), (5, 15, 3, 0, 0), (6, 29, 6, 3, 0), (6, 0, 1, 4, 2), (2, 17, 1, 0, 2), (6, 16, 6, 1, 0), (2, 11, 1, 1, 0), (6, 18, 3, 4, 2), (4, 18, 4, 3, 2), (1, 9, 0, 0, 2), (1, 7, 5, 2, 2), (1, 12, 3, 4, 0), (0, 8, 6, 2, 1), (4, 16, 2, 4, 1), (5, 5, 6, 0, 0), (2, 11, 0, 2, 2), (6, 1, 1, 3, 0), (3, 9, 6, 2, 0), (6, 29, 2, 3, 0), (1, 26, 6, 1, 2), (1, 24, 0, 0, 1), (5, 3, 6, 2, 2), (1, 7, 5, 1, 0), (5, 13, 3, 4, 1), (4, 25, 0, 2, 0), (4, 0, 6, 0, 2), (3, 17, 6, 3, 2), (1, 18, 6, 2, 0), (0, 27, 1, 2, 0), (3, 27, 2, 3, 0), (1, 7, 0, 0, 1), (4, 9, 1, 1, 2), (0, 0, 6, 1, 2), (4, 22, 6, 3, 0), (6, 12, 1, 0, 2), (5, 23, 6, 3, 0), (2, 4, 1, 2, 2), (4, 14, 5, 2, 1), (0, 22, 6, 3, 0), (0, 23, 5, 3, 0), (3, 4, 5, 1, 2), (6, 3, 0, 4, 1), (5, 21, 2, 3, 2), (2, 20, 6, 2, 0), (0, 5, 5, 3, 2), (6, 0, 5, 1, 1), (4, 8, 4, 4, 2), (0, 14, 1, 2, 0), (0, 9, 0, 3, 2), (0, 9, 2, 4, 2), (3, 26, 3, 2, 2), (3, 15, 3, 4, 2), (1, 24, 0, 4, 2), (3, 7, 1, 4, 1), (3, 27, 4, 4, 0), (1, 26, 2, 1, 1), (0, 4, 5, 4, 0), (2, 29, 2, 1, 2), (3, 28, 0, 1, 0), (6, 13, 2, 2, 1), (4, 18, 0, 1, 2), (1, 15, 2, 4, 0), (2, 29, 0, 1, 1), (6, 22, 1, 1, 1), (1, 24, 2, 0, 2), (2, 10, 5, 0, 0), (4, 21, 1, 4, 1), (1, 7, 2, 3, 2), (3, 0, 1, 2, 2), (5, 21, 2, 2, 0), (3, 26, 6, 4, 1), (2, 13, 1, 2, 1), (2, 8, 2, 3, 0), (3, 17, 2, 3, 0), (3, 28, 1, 0, 1), (4, 22, 5, 4, 2), (6, 29, 0, 4, 0), (0, 17, 4, 0, 0), (6, 5, 6, 4, 1), (6, 12, 2, 1, 2), (3, 12, 2, 3, 2), (5, 29, 5, 2, 0), (5, 9, 0, 1, 2), (1, 19, 1, 4, 0), (1, 15, 5, 4, 1), (5, 26, 4, 0, 0), (3, 29, 3, 2, 1), (5, 23, 3, 1, 1), (1, 17, 2, 0, 2), (4, 28, 0, 0, 0), (4, 28, 6, 4, 2), (3, 1, 3, 2, 0), (5, 13, 2, 1, 2), (1, 19, 5, 4, 0), (1, 15, 0, 3, 2), (6, 8, 2, 0, 0), (2, 4, 2, 4, 1), (3, 4, 0, 1, 0), (3, 21, 5, 3, 0), (4, 27, 1, 0, 1), (3, 13, 5, 4, 0), (5, 12, 1, 2, 0), (4, 3, 3, 0, 2), (6, 23, 0, 3, 1), (4, 21, 1, 2, 2), (1, 21, 1, 3, 0), (5, 12, 4, 0, 1), (1, 17, 3, 2, 0), (4, 28, 6, 1, 2), (4, 20, 1, 1, 0), (5, 28, 5, 2, 2), (5, 11, 3, 2, 1), (2, 23, 3, 4, 1), (4, 29, 3, 1, 2), (5, 19, 4, 1, 1), (4, 29, 0, 3, 1), (3, 19, 2, 1, 1), (3, 1, 2, 1, 2), (5, 12, 2, 3, 0), (1, 26, 5, 3, 1), (4, 20, 2, 2, 1), (1, 20, 5, 4, 2), (0, 2, 2, 1, 1), (2, 10, 0, 2, 0), (5, 7, 0, 4, 1), (0, 1, 4, 2, 1), (0, 3, 0, 1, 0), (5, 18, 0, 0, 1), (3, 16, 3, 2, 2), (5, 20, 0, 4, 2), (6, 27, 3, 0, 0), (2, 28, 5, 2, 1), (0, 5, 4, 3, 0), (5, 4, 2, 0, 0), (0, 9, 0, 3, 1), (1, 14, 0, 3, 1), (3, 8, 4, 3, 0), (5, 24, 3, 2, 0), (6, 15, 2, 4, 2), (4, 8, 1, 3, 1), (6, 17, 4, 4, 1), (0, 13, 3, 3, 1), (2, 29, 1, 2, 1), (6, 7, 0, 0, 1), (1, 0, 1, 1, 0), (4, 0, 5, 4, 1), (1, 19, 1, 2, 1), (3, 0, 1, 4, 2), (2, 13, 6, 3, 1), (3, 6, 2, 0, 1), (5, 16, 0, 0, 1), (2, 25, 3, 1, 0), (0, 26, 2, 0, 2), (4, 4, 1, 3, 2), (4, 5, 2, 2, 0), (5, 15, 6, 3, 1), (1, 5, 3, 3, 2), (3, 22, 3, 1, 1), (4, 6, 4, 3, 1), (6, 27, 6, 2, 2), (0, 10, 6, 4, 0), (1, 14, 1, 1, 0), (6, 16, 2, 1, 1), (1, 16, 0, 0, 1), (3, 6, 5, 2, 2), (3, 18, 4, 1, 0), (4, 2, 6, 4, 1), (2, 24, 4, 4, 1), (1, 0, 3, 3, 0), (6, 3, 5, 3, 1), (1, 12, 5, 0, 1), (4, 29, 1, 1, 2), (4, 29, 4, 3, 2), (3, 19, 0, 1, 1), (1, 8, 2, 1, 1), (0, 9, 3, 1, 2), (2, 4, 4, 3, 0), (2, 20, 4, 0, 0), (4, 24, 5, 2, 1), (5, 17, 1, 1, 2), (0, 29, 5, 1, 0), (6, 24, 6, 4, 2), (4, 14, 2, 4, 2), (3, 15, 6, 4, 1), (5, 9, 0, 2, 2), (2, 15, 1, 4, 0), (0, 7, 1, 0, 1), (2, 24, 5, 3, 0), (5, 18, 4, 2, 2), (5, 2, 1, 3, 0), (4, 26, 5, 1, 2), (1, 25, 5, 0, 1), (6, 5, 5, 4, 1), (5, 23, 2, 0, 1), (1, 24, 4, 3, 0), (5, 18, 2, 2, 0), (5, 26, 2, 3, 0), (2, 9, 2, 0, 2), (0, 3, 5, 2, 2), (3, 7, 6, 2, 0), (0, 15, 0, 1, 2), (0, 8, 4, 0, 0), (3, 5, 1, 2, 1), (4, 15, 4, 2, 1), (5, 28, 6, 1, 2), (5, 10, 3, 3, 1), (3, 11, 5, 2, 2), (5, 26, 6, 1, 2), (6, 25, 6, 1, 0), (6, 29, 1, 2, 1), (5, 27, 6, 4, 1), (3, 9, 0, 2, 0), (6, 0, 2, 2, 1), (6, 28, 5, 4, 0), (6, 16, 5, 2, 2), (3, 4, 4, 2, 0), (1, 25, 5, 1, 0), (0, 29, 2, 1, 1), (3, 25, 6, 3, 0), (1, 27, 4, 2, 1), (6, 10, 3, 1, 2), (3, 22, 1, 0, 0), (5, 6, 2, 0, 2), (3, 2, 0, 1, 2), (2, 28, 1, 3, 2), (6, 20, 0, 2, 1), (3, 0, 1, 1, 1), (4, 6, 5, 1, 1), (5, 27, 4, 3, 1), (4, 9, 2, 4, 2), (0, 9, 5, 2, 0), (6, 14, 5, 3, 0), (6, 7, 2, 2, 2), (1, 25, 0, 2, 2), (3, 6, 4, 2, 1), (1, 18, 2, 3, 1), (1, 7, 6, 3, 2), (6, 12, 0, 1, 2), (0, 25, 0, 3, 0), (0, 3, 4, 1, 0), (5, 27, 0, 2, 0), (0, 2, 0, 1, 1), (6, 12, 5, 3, 2), (4, 4, 1, 2, 1), (0, 7, 2, 3, 1), (2, 10, 3, 3, 1), (4, 13, 3, 3, 0), (1, 11, 0, 0, 2), (4, 13, 0, 4, 2), (6, 12, 4, 1, 2), (5, 23, 1, 1, 1), (0, 27, 3, 2, 2), (5, 22, 3, 4, 1), (2, 13, 5, 4, 0), (2, 9, 1, 3, 2), (6, 20, 3, 0, 0), (5, 28, 3, 4, 0), (6, 25, 6, 4, 1), (1, 21, 4, 3, 2), (0, 6, 2, 3, 2), (2, 27, 0, 1, 1), (1, 27, 1, 4, 2), (5, 17, 4, 2, 2), (0, 22, 2, 3, 2), (4, 3, 0, 0, 1), (0, 29, 3, 2, 1), (5, 24, 4, 1, 1), (1, 24, 4, 1, 0), (3, 0, 6, 4, 0), (1, 7, 3, 2, 2), (5, 17, 4, 0, 0), (2, 13, 4, 1, 1), (4, 25, 6, 2, 2), (1, 6, 6, 1, 2), (3, 3, 2, 1, 0), (6, 7, 1, 2, 0), (2, 21, 3, 1, 1), (6, 7, 5, 4, 1), (5, 15, 0, 4, 1), (4, 4, 0, 0, 1), (3, 12, 2, 3, 0), (3, 2, 5, 3, 1), (5, 13, 2, 0, 2), (6, 14, 0, 1, 2), (2, 1, 6, 0, 2), (5, 25, 5, 1, 0), (3, 27, 5, 1, 1), (5, 15, 2, 0, 2), (4, 16, 4, 4, 2), (0, 1, 3, 0, 0), (2, 20, 1, 1, 0), (5, 5, 5, 1, 0), (3, 5, 3, 1, 1), (3, 21, 3, 3, 0), (0, 9, 4, 2, 2), (3, 29, 6, 4, 2), (6, 20, 4, 2, 2), (0, 8, 1, 4, 0), (3, 8, 6, 4, 1), (4, 20, 4, 0, 0), (3, 8, 4, 1, 1), (2, 20, 6, 0, 1), (3, 3, 1, 4, 1), (5, 9, 6, 0, 2), (0, 15, 3, 2, 2), (3, 26, 0, 3, 2), (0, 4, 5, 4, 0), (1, 4, 5, 0, 0), (5, 11, 2, 1, 0), (1, 22, 0, 0, 2), (5, 26, 4, 1, 1), (4, 19, 3, 0, 2), (2, 0, 6, 1, 1), (3, 25, 6, 0, 2), (2, 29, 2, 3, 2), (0, 3, 0, 0, 2), (6, 12, 2, 2, 0), (6, 5, 2, 3, 0), (0, 25, 2, 3, 0), (0, 7, 1, 0, 1), (1, 28, 4, 4, 1), (3, 19, 5, 1, 0), (3, 10, 6, 0, 0), (5, 21, 3, 4, 2), (5, 17, 5, 1, 1), (5, 6, 1, 2, 1), (2, 9, 5, 1, 1), (1, 8, 1, 3, 2), (0, 26, 2, 2, 0), (0, 22, 4, 3, 0), (1, 13, 1, 4, 2), (5, 25, 0, 2, 1), (4, 16, 2, 3, 1), (2, 17, 1, 2, 2), (3, 28, 3, 4, 2), (3, 9, 1, 4, 1), (2, 7, 2, 4, 0), (6, 25, 5, 2, 1), (0, 18, 3, 4, 0), (5, 10, 2, 1, 1), (5, 22, 6, 1, 2), (6, 23, 4, 0, 1), (0, 18, 4, 3, 1), (1, 11, 4, 0, 1), (3, 1, 0, 1, 1), (2, 7, 1, 2, 1), (2, 13, 1, 3, 0), (0, 14, 1, 2, 2), (5, 29, 3, 0, 0), (3, 5, 2, 2, 0), (1, 18, 1, 4, 0), (4, 22, 3, 4, 2), (1, 20, 5, 0, 2), (0, 27, 6, 3, 0), (4, 5, 1, 0, 1), (2, 7, 6, 0, 0), (1, 2, 0, 1, 0), (6, 24, 6, 1, 2), (0, 9, 2, 1, 0), (3, 26, 5, 3, 2), (2, 24, 0, 2, 0), (4, 17, 4, 4, 2), (0, 12, 5, 3, 0), (5, 14, 1, 1, 2), (5, 15, 3, 0, 0), (1, 26, 5, 4, 1), (6, 12, 3, 2, 0), (6, 11, 3, 0, 1), (0, 11, 5, 4, 0), (4, 23, 4, 1, 1), (6, 28, 4, 1, 0), (4, 20, 4, 0, 1), (4, 2, 4, 2, 2), (6, 14, 5, 1, 0), (6, 9, 5, 4, 2), (0, 25, 5, 0, 0), (1, 29, 2, 3, 1), (1, 21, 5, 4, 2), (4, 10, 4, 4, 0), (6, 23, 6, 2, 2), (0, 22, 5, 1, 2), (4, 23, 3, 4, 0), (2, 2, 5, 4, 0), (3, 25, 0, 4, 1), (5, 2, 1, 4, 1), (3, 29, 1, 4, 1), (6, 7, 5, 2, 0), (0, 24, 2, 4, 0), (0, 14, 0, 3, 1), (5, 10, 0, 0, 0), (5, 10, 5, 3, 1), (3, 19, 0, 3, 1), (2, 18, 5, 0, 0), (0, 5, 3, 2, 1), (0, 0, 0, 2, 0), (1, 16, 0, 3, 2), (0, 1, 1, 0, 0), (4, 11, 0, 2, 1), (2, 4, 0, 1, 2), (4, 6, 1, 1, 1), (6, 18, 0, 4, 0), (0, 5, 4, 0, 0), (3, 12, 5, 1, 1), (3, 17, 5, 2, 1), (3, 0, 6, 4, 2), (1, 16, 1, 0, 2), (3, 24, 5, 1, 0), (3, 11, 1, 3, 1), (2, 2, 1, 4, 0), (6, 7, 5, 3, 2), (0, 24, 3, 1, 0), (0, 23, 1, 0, 1), (5, 4, 4, 3, 0), (3, 16, 4, 3, 0), (2, 24, 3, 3, 2), (1, 16, 2, 1, 1), (2, 11, 5, 4, 0), (1, 19, 5, 2, 2), (3, 13, 1, 3, 0), (4, 20, 0, 1, 1), (0, 12, 5, 2, 2), (5, 26, 0, 1, 0), (4, 14, 3, 3, 2), (4, 14, 2, 4, 2), (1, 1, 6, 0, 2), (2, 9, 3, 4, 1), (2, 11, 5, 3, 0), (0, 7, 1, 1, 0), (6, 6, 5, 3, 1), (0, 28, 3, 0, 0), (4, 26, 2, 4, 1), (0, 24, 6, 1, 0), (2, 28, 6, 1, 2), (1, 18, 3, 0, 0), (2, 20, 3, 2, 1), (3, 4, 1, 4, 2), (0, 25, 6, 2, 2), (6, 7, 0, 0, 2), (3, 24, 6, 3, 0), (3, 22, 1, 4, 1), (5, 15, 6, 3, 1), (3, 8, 3, 0, 2), (1, 1, 2, 2, 1), (2, 18, 1, 3, 2), (3, 20, 6, 3, 2), (1, 7, 1, 1, 1), (4, 22, 3, 0, 2), (1, 14, 6, 2, 0), (5, 18, 2, 4, 1), (5, 2, 5, 3, 0), (0, 19, 2, 2, 0), (3, 14, 4, 3, 0), (5, 12, 1, 0, 0), (1, 4, 2, 4, 1), (4, 16, 6, 3, 0), (3, 8, 5, 1, 0), (6, 3, 1, 3, 0), (0, 13, 6, 1, 2), (6, 6, 2, 3, 1), (4, 1, 6, 1, 1), (3, 10, 2, 2, 1), (5, 20, 6, 4, 1), (6, 22, 1, 3, 0), (2, 23, 6, 2, 0), (5, 14, 4, 3, 0), (3, 4, 5, 1, 0), (2, 5, 3, 2, 2), (5, 28, 2, 1, 1), (2, 12, 3, 3, 2), (0, 15, 4, 1, 1), (4, 14, 2, 4, 1), (0, 26, 2, 4, 2), (6, 13, 4, 0, 1), (0, 25, 0, 4, 2), (4, 23, 0, 3, 2), (4, 27, 6, 1, 1), (4, 14, 1, 1, 1), (1, 26, 0, 1, 2), (5, 1, 3, 0, 1), (2, 9, 5, 1, 1), (3, 28, 1, 3, 1), (0, 28, 6, 0, 2), (2, 1, 5, 3, 1), (5, 19, 6, 0, 2), (4, 21, 3, 0, 0), (0, 10, 2, 4, 1), (5, 10, 3, 4, 2), (2, 12, 6, 1, 0), (3, 15, 0, 3, 1), (3, 2, 2, 0, 1), (1, 9, 0, 4, 1), (0, 15, 0, 4, 2), (4, 25, 6, 0, 0), (5, 17, 5, 4, 0), (3, 2, 2, 4, 2), (4, 29, 5, 4, 1), (1, 1, 5, 3, 0), (3, 10, 1, 0, 1), (0, 26, 4, 1, 0), (4, 2, 2, 2, 1), (1, 27, 1, 0, 2), (3, 17, 4, 2, 2), (4, 9, 5, 0, 2), (4, 5, 2, 0, 2), (2, 11, 0, 0, 2), (6, 2, 0, 3, 0), (3, 23, 0, 0, 1), (5, 4, 4, 2, 0), (3, 2, 6, 0, 1), (4, 14, 5, 3, 0), (5, 21, 0, 3, 1), (5, 7, 0, 1, 0), (0, 28, 2, 4, 2), (0, 25, 4, 1, 2), (4, 18, 4, 1, 2), (4, 23, 2, 2, 2), (6, 5, 2, 2, 2), (1, 5, 5, 0, 2), (2, 5, 0, 1, 2), (5, 14, 1, 0, 1), (1, 16, 2, 4, 1), (1, 28, 6, 3, 2), (2, 6, 1, 1, 0), (1, 26, 3, 3, 2), (1, 2, 6, 3, 2), (1, 9, 3, 0, 0), (6, 23, 5, 4, 2), (1, 12, 2, 1, 2), (1, 22, 4, 2, 1), (3, 15, 3, 0, 1), (6, 5, 1, 3, 1), (5, 20, 6, 3, 1), (1, 6, 1, 3, 1), (3, 7, 4, 3, 0), (4, 9, 0, 0, 2), (4, 2, 0, 3, 2), (4, 27, 5, 2, 0), (5, 1, 6, 2, 2), (6, 25, 0, 2, 0), (3, 0, 5, 2, 0), (6, 12, 3, 4, 2), (3, 4, 3, 4, 1), (4, 26, 3, 1, 1), (0, 22, 0, 2, 0), (4, 21, 1, 2, 0), (4, 1, 0, 0, 2), (4, 9, 6, 0, 2), (3, 13, 0, 3, 2), (3, 6, 4, 1, 0), (1, 22, 5, 4, 0), (3, 5, 2, 4, 0), (5, 8, 3, 2, 2), (6, 23, 6, 4, 1), (5, 20, 0, 4, 1), (6, 28, 5, 1, 1), (4, 20, 6, 2, 2), (6, 1, 4, 4, 1), (5, 12, 0, 0, 1), (5, 27, 0, 3, 0), (2, 8, 0, 3, 2), (5, 28, 6, 2, 1), (3, 4, 4, 2, 0), (6, 3, 2, 2, 1), (5, 3, 0, 3, 1), (2, 13, 5, 3, 2), (5, 15, 2, 1, 2), (0, 3, 0, 4, 1), (4, 26, 0, 4, 2), (5, 8, 6, 1, 2), (2, 26, 0, 4, 1), (4, 9, 6, 3, 1), (1, 9, 0, 3, 0), (6, 26, 5, 4, 1), (4, 4, 1, 3, 0), (6, 24, 0, 2, 2), (3, 0, 3, 4, 0), (4, 18, 0, 4, 1), (3, 8, 3, 0, 2), (2, 10, 0, 3, 1), (1, 27, 4, 2, 1), (0, 27, 5, 2, 2), (4, 7, 0, 1, 2), (6, 27, 1, 4, 0), (3, 23, 1, 1, 2), (4, 1, 1, 0, 2), (6, 3, 1, 4, 2), (0, 12, 3, 3, 0), (1, 5, 2, 0, 0), (2, 4, 4, 4, 0), (2, 11, 0, 2, 0), (3, 26, 6, 3, 0), (2, 7, 1, 1, 1), (1, 20, 3, 3, 1), (3, 8, 1, 1, 2), (3, 16, 6, 4, 2), (2, 12, 6, 4, 0), (1, 11, 1, 1, 2), (5, 2, 4, 3, 1), (6, 21, 6, 4, 2), (6, 6, 5, 4, 0), (3, 1, 6, 1, 1), (2, 20, 6, 2, 2), (4, 19, 2, 2, 1), (0, 9, 0, 3, 0), (6, 20, 5, 4, 1), (4, 21, 6, 4, 2), (4, 24, 5, 2, 1), (1, 8, 6, 3, 2), (6, 18, 5, 0, 0), (0, 5, 6, 3, 1), (0, 10, 6, 1, 2), (6, 23, 3, 0, 2), (6, 1, 3, 0, 2), (4, 6, 2, 1, 1), (3, 9, 0, 3, 1), (6, 15, 5, 3, 0), (6, 23, 0, 4, 2), (1, 20, 6, 0, 1), (6, 26, 0, 4, 2), (5, 2, 3, 0, 2), (6, 15, 4, 4, 0), (6, 12, 2, 1, 0), (3, 25, 5, 1, 1), (3, 20, 0, 3, 2), (2, 4, 4, 3, 1), (1, 21, 4, 3, 2), (6, 4, 4, 3, 1), (3, 5, 1, 2, 1), (5, 5, 4, 0, 1), (0, 16, 2, 0, 1), (5, 5, 0, 2, 2), (4, 1, 6, 1, 1), (3, 4, 2, 3, 1), (5, 29, 2, 2, 1), (2, 27, 6, 1, 2), (5, 28, 6, 3, 0), (2, 14, 3, 3, 1), (0, 5, 4, 0, 0), (2, 12, 6, 3, 1), (5, 24, 5, 1, 0), (6, 17, 4, 0, 2), (5, 14, 0, 3, 2), (4, 27, 1, 1, 1), (3, 14, 6, 2, 0), (0, 14, 3, 0, 2), (5, 23, 3, 3, 0), (0, 16, 5, 3, 0), (2, 1, 0, 3, 0), (5, 12, 2, 1, 2), (4, 25, 6, 4, 0), (0, 11, 0, 4, 2), (6, 22, 3, 0, 2), (6, 7, 0, 4, 0), (3, 25, 1, 2, 1), (5, 27, 2, 3, 1), (3, 11, 3, 4, 0), (1, 23, 6, 1, 0), (4, 2, 4, 0, 2), (5, 17, 5, 0, 2), (1, 8, 2, 0, 2), (1, 11, 1, 4, 2), (3, 17, 0, 0, 1), (4, 14, 3, 3, 1), (4, 16, 5, 2, 2), (1, 8, 5, 3, 1), (3, 20, 1, 2, 1), (3, 25, 0, 4, 1), (1, 13, 1, 4, 0), (6, 9, 0, 0, 0), (6, 9, 0, 4, 2), (5, 2, 6, 0, 1), (0, 5, 6, 2, 0), (1, 29, 4, 2, 0), (5, 1, 5, 4, 1), (4, 25, 5, 1, 1), (2, 1, 1, 2, 0), (2, 26, 1, 4, 1), (6, 29, 3, 2, 1), (6, 28, 0, 2, 2), (3, 20, 2, 3, 2), (4, 18, 2, 0, 0), (2, 28, 1, 4, 1), (1, 1, 3, 4, 0), (6, 22, 5, 4, 0), (3, 24, 3, 2, 0), (3, 22, 4, 4, 0), (0, 15, 3, 0, 1), (5, 6, 1, 1, 1), (6, 5, 2, 3, 1), (1, 12, 4, 3, 1), (4, 26, 4, 1, 0), (0, 16, 5, 2, 0), (6, 16, 4, 2, 2), (2, 16, 5, 1, 1), (4, 10, 5, 0, 0), (1, 18, 5, 4, 0), (3, 21, 6, 4, 1), (5, 25, 3, 4, 2), (4, 18, 5, 0, 2), (4, 28, 3, 4, 2), (2, 29, 3, 0, 1), (3, 1, 2, 0, 1), (2, 2, 3, 4, 0), (1, 19, 2, 1, 0), (0, 17, 6, 4, 2), (3, 26, 2, 0, 0), (2, 12, 4, 1, 0), (3, 7, 3, 4, 0), (5, 27, 1, 3, 0), (2, 20, 6, 4, 2), (3, 28, 2, 0, 1), (0, 19, 4, 2, 1), (0, 11, 4, 2, 2), (0, 4, 5, 4, 0), (5, 23, 2, 1, 1), (4, 12, 2, 0, 1), (2, 5, 6, 2, 2), (4, 20, 0, 2, 2), (5, 2, 0, 0, 1), (6, 16, 0, 3, 2), (4, 3, 6, 3, 1), (0, 4, 4, 2, 2), (1, 29, 2, 0, 0), (6, 20, 4, 0, 2), (3, 23, 5, 0, 2), (6, 21, 2, 1, 0), (1, 24, 1, 0, 1), (0, 8, 5, 2, 0), (0, 22, 5, 4, 0), (3, 0, 5, 2, 2), (4, 26, 6, 3, 2), (6, 12, 2, 2, 2), (5, 0, 5, 1, 0), (5, 23, 5, 0, 0), (2, 16, 3, 4, 2), (4, 20, 5, 0, 2), (5, 2, 6, 0, 0), (4, 24, 4, 2, 2), (4, 11, 4, 3, 2), (3, 6, 0, 4, 0), (5, 3, 5, 4, 0), (5, 24, 3, 0, 1), (3, 14, 1, 4, 0), (5, 18, 1, 4, 2), (6, 18, 5, 0, 2), (1, 16, 4, 4, 0), (6, 22, 3, 4, 1), (5, 23, 6, 2, 1), (4, 5, 4, 0, 0), (1, 10, 6, 0, 1), (0, 0, 3, 3, 1), (6, 23, 2, 2, 0), (2, 24, 6, 2, 1), (2, 19, 6, 3, 1), (1, 25, 6, 2, 0), (3, 1, 2, 1, 0), (1, 13, 2, 1, 1), (3, 24, 5, 1, 2), (5, 17, 6, 3, 2), (4, 5, 4, 2, 2), (2, 12, 1, 3, 2), (2, 16, 2, 0, 1), (1, 6, 1, 2, 1), (6, 10, 2, 1, 1), (4, 7, 6, 1, 0), (5, 22, 1, 4, 1), (5, 11, 4, 0, 2), (0, 22, 4, 4, 0), (2, 15, 0, 2, 2), (1, 14, 6, 0, 0), (3, 26, 3, 4, 0), (2, 26, 3, 3, 1), (4, 27, 3, 3, 1), (2, 26, 2, 4, 2), (3, 22, 4, 1, 0), (4, 15, 3, 3, 1), (0, 12, 2, 4, 2), (6, 17, 5, 0, 1), (0, 25, 3, 4, 1), (4, 21, 1, 4, 1), (6, 3, 2, 3, 0), (6, 6, 2, 1, 0), (1, 21, 4, 0, 0), (6, 29, 0, 2, 1), (0, 24, 4, 2, 2), (1, 10, 0, 1, 0), (3, 3, 3, 2, 2), (4, 5, 6, 0, 0), (2, 1, 1, 0, 1), (4, 20, 3, 4, 1), (0, 2, 6, 2, 0), (0, 15, 5, 1, 2), (6, 22, 3, 2, 1), (2, 4, 2, 2, 1), (4, 24, 0, 1, 1), (4, 29, 0, 0, 2), (4, 22, 5, 4, 0), (6, 24, 6, 0, 0), (6, 6, 0, 0, 1), (6, 9, 1, 4, 1), (2, 23, 3, 2, 1), (1, 17, 5, 3, 0), (4, 11, 4, 0, 2), (4, 16, 4, 3, 2), (1, 4, 4, 0, 0), (2, 23, 6, 3, 1), (4, 0, 4, 3, 2), (3, 15, 0, 3, 2), (5, 13, 2, 1, 2), (1, 20, 5, 0, 1), (5, 14, 3, 2, 0), (4, 22, 1, 4, 0), (4, 23, 2, 2, 0), (0, 25, 5, 4, 2), (5, 11, 3, 2, 2), (0, 0, 4, 3, 2), (1, 11, 4, 4, 0), (1, 1, 4, 4, 0), (2, 9, 3, 3, 1), (6, 2, 4, 2, 0), (4, 22, 0, 4, 0), (6, 5, 5, 1, 0), (0, 29, 4, 4, 1), (4, 21, 6, 1, 1), (2, 10, 0, 2, 2), (4, 26, 1, 3, 1), (2, 27, 5, 0, 1), (2, 24, 4, 1, 0), (0, 25, 4, 3, 2), (4, 13, 3, 1, 0), (0, 12, 1, 4, 1), (3, 20, 1, 0, 2), (0, 1, 1, 3, 0), (5, 27, 2, 4, 2), (1, 27, 5, 4, 0), (0, 3, 5, 1, 2), (3, 5, 5, 3, 2), (4, 24, 6, 0, 1), (0, 16, 0, 4, 2), (6, 21, 0, 1, 2), (1, 21, 0, 2, 0), (4, 13, 6, 4, 0), (2, 6, 0, 1, 2), (1, 16, 3, 2, 0), (0, 26, 5, 0, 1), (2, 11, 6, 0, 2), (0, 12, 5, 3, 0), (5, 20, 6, 3, 1), (3, 9, 2, 2, 1), (4, 25, 3, 1, 2), (6, 8, 5, 1, 0), (3, 3, 6, 3, 1), (2, 9, 3, 3, 2), (1, 22, 4, 1, 1), (2, 7, 0, 4, 1), (3, 5, 4, 0, 0), (1, 24, 5, 3, 0), (6, 4, 1, 1, 2), (4, 25, 4, 2, 2), (4, 3, 0, 0, 0), (2, 11, 2, 0, 1), (0, 2, 6, 0, 0), (5, 5, 3, 2, 0), (6, 5, 4, 0, 1), (0, 5, 3, 3, 1), (3, 8, 5, 3, 0), (5, 26, 4, 4, 1), (6, 0, 3, 2, 0), (1, 28, 1, 2, 2), (3, 26, 1, 2, 0), (5, 28, 5, 1, 0), (0, 11, 5, 1, 1), (3, 4, 3, 1, 2), (3, 7, 0, 4, 2), (1, 7, 3, 1, 1), (2, 5, 0, 1, 1), (6, 6, 5, 0, 0), (5, 12, 0, 3, 1), (5, 23, 1, 4, 1), (6, 24, 2, 1, 2), (1, 18, 1, 0, 0), (3, 1, 4, 0, 2), (2, 28, 1, 0, 1), (3, 10, 0, 1, 2), (4, 14, 2, 1, 1), (0, 24, 6, 1, 2), (5, 21, 3, 0, 1), (0, 27, 2, 0, 2), (6, 27, 5, 0, 2), (2, 21, 0, 1, 0), (6, 15, 1, 3, 1), (2, 6, 1, 4, 0), (3, 13, 2, 3, 2), (4, 19, 3, 1, 1), (5, 25, 6, 1, 0), (6, 6, 0, 1, 1), (4, 9, 1, 1, 1), (1, 20, 6, 0, 0), (4, 6, 4, 2, 0), (0, 2, 1, 0, 1), (2, 12, 4, 2, 2), (1, 10, 3, 3, 1), (4, 2, 0, 4, 2), (3, 3, 1, 2, 1), (3, 28, 3, 4, 2), (0, 27, 4, 1, 1), (4, 7, 3, 3, 2), (3, 16, 5, 3, 2), (2, 15, 2, 0, 1), (6, 1, 1, 0, 2), (0, 13, 6, 3, 2), (6, 8, 4, 3, 0), (2, 15, 3, 3, 0), (1, 28, 4, 4, 2), (1, 10, 5, 1, 0), (2, 15, 1, 0, 2), (6, 8, 5, 2, 2), (0, 0, 0, 2, 0), (6, 7, 0, 4, 2), (3, 23, 1, 0, 0), (6, 24, 5, 3, 2), (1, 28, 4, 4, 2), (3, 23, 3, 1, 2), (0, 4, 1, 0, 2), (3, 9, 0, 1, 0), (1, 2, 5, 0, 2), (4, 19, 2, 3, 0), (5, 0, 1, 2, 0), (6, 4, 6, 0, 1), (6, 10, 3, 4, 1), (6, 22, 3, 4, 0), (4, 22, 5, 1, 2), (3, 28, 3, 4, 2), (1, 12, 5, 0, 1), (0, 12, 3, 3, 1), (4, 26, 0, 3, 0), (3, 1, 1, 3, 0), (6, 3, 1, 2, 1), (5, 20, 0, 2, 0), (6, 11, 5, 2, 2), (0, 18, 0, 0, 0), (6, 26, 2, 2, 1), (4, 14, 3, 4, 2), (6, 2, 5, 2, 0), (5, 29, 1, 2, 1), (1, 11, 5, 1, 2), (2, 10, 6, 3, 2)]